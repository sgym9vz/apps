name: Deploy Django (docker-compose) to EC2

on:
  workflow_dispatch:          # 手動実行
  push:
    branches: [ main ]        # mainにpush時デプロイ
    paths:
      - 'apps/django_intmd/**'
      - '.github/workflows/deploy-django-ec2.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # SSH 経由で EC2 上のリポを更新→compose up
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail

            # 1) 依存(初回のみ有効)
            if ! command -v docker &>/dev/null; then
              sudo dnf -y update
              sudo dnf -y install docker
              sudo systemctl enable --now docker
            fi
            if ! docker compose version &>/dev/null; then
              sudo dnf -y install docker-compose-plugin
            fi

            # 2) リポジトリを用意（まだ無ければclone）
            mkdir -p ~/apps && cd ~/apps
            if [ ! -d infra ]; then
              git clone https://github.com/sgym9vz/infra.git
            fi
            cd infra
            git fetch --all
            git reset --hard origin/main

            # 3) アプリディレクトリへ
            cd apps/django_intmd

            # 4) 既存で80番を掴むコンテナを止める（初回のnginx対策）
            docker ps -q --filter 'publish=80' | xargs -r docker rm -f || true

            # 5) compose ビルド＆起動
            #   ※ nginxのportsが "80:8080" になっている想定
            sudo docker compose up -d --build

            # 6) ヘルスチェック簡易
            sleep 5
            curl -fsS http://localhost/ >/dev/null || (docker compose logs --no-color --tail=100; false)

      # 成功時にJobサマリーへIPを出す
      - name: Show URL
        if: success()
        run: |
          echo "## Deployed" >> $GITHUB_STEP_SUMMARY
          echo "- URL: http://${{ secrets.EC2_HOST }}/" >> $GITHUB_STEP_SUMMARY